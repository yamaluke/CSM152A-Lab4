$date
	Wed Mar  5 10:57:45 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module unlocker_tb $end
$var wire 1 ! resetCount $end
$var wire 1 " lock $end
$var reg 1 # btn1 $end
$var reg 1 $ btn2 $end
$var reg 1 % btn3 $end
$var reg 1 & btn4 $end
$var reg 1 ' btn5 $end
$var reg 1 ( clk $end
$var reg 4 ) inputCount [3:0] $end
$var reg 1 * locker $end
$var reg 5 + passwordInput0 [4:0] $end
$var reg 5 , passwordInput1 [4:0] $end
$var reg 5 - passwordInput2 [4:0] $end
$var reg 5 . passwordInput3 [4:0] $end
$var reg 5 / userNameInput0 [4:0] $end
$var reg 5 0 userNameInput1 [4:0] $end
$var reg 5 1 userNameInput2 [4:0] $end
$var reg 5 2 userNameInput3 [4:0] $end
$scope module my_unlock $end
$var wire 1 # btn1 $end
$var wire 1 $ btn2 $end
$var wire 1 % btn3 $end
$var wire 1 & btn4 $end
$var wire 1 ' btn5 $end
$var wire 1 ( clk $end
$var wire 4 3 inputCount [3:0] $end
$var wire 1 * locker $end
$var wire 5 4 passwordInput0 [4:0] $end
$var wire 5 5 passwordInput1 [4:0] $end
$var wire 5 6 passwordInput2 [4:0] $end
$var wire 5 7 passwordInput3 [4:0] $end
$var wire 5 8 userNameInput0 [4:0] $end
$var wire 5 9 userNameInput1 [4:0] $end
$var wire 5 : userNameInput2 [4:0] $end
$var wire 5 ; userNameInput3 [4:0] $end
$var reg 1 " lock $end
$var reg 1 ! resetCount $end
$var reg 20 < tempPassword [19:0] $end
$var reg 20 = tempUser [19:0] $end
$var integer 32 > currentUser [31:0] $end
$var integer 32 ? i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ?
b0 >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
bx )
0(
x'
x&
x%
x$
x#
1"
x!
$end
#1
1(
#2
0(
#3
1(
#4
0(
#5
1(
#6
0(
#7
1(
#8
0(
#9
1(
#10
0(
b1 )
b1 3
b0 /
b0 8
#11
1(
b10 )
b10 3
b0 0
b0 9
#12
0(
b11 )
b11 3
b1 1
b1 :
#13
1(
b100 )
b100 3
b1 2
b1 ;
#14
0(
b101 )
b101 3
b0 +
b0 4
#15
1(
b110 )
b110 3
b1 ,
b1 5
#16
0(
b111 )
b111 3
b1 -
b1 6
#17
b1000010000000000 <
b1000010000000000 =
b1000 ?
1(
b1000 )
b1000 3
b0 .
b0 7
#18
0(
#19
b1000 ?
1(
#20
0(
#21
b1000 ?
1(
#22
0(
#23
b1000 ?
1(
#24
0(
#25
b1000 ?
1(
#26
0(
#27
b1000 ?
1(
#28
0(
#29
b1000 ?
1(
#30
0(
#31
b1000 ?
1(
#32
0(
#33
b1000 ?
1(
#34
0(
#35
b1000 ?
1(
#36
0(
#37
1(
b1 )
b1 3
#38
0(
b10 )
b10 3
#39
1(
b11 )
b11 3
#40
0(
b100 )
b100 3
#41
1(
b101 )
b101 3
#42
0(
b110 )
b110 3
b0 ,
b0 5
#43
1(
b111 )
b111 3
#44
0(
b1000 )
b1000 3
b1 .
b1 7
#45
b111 >
1!
0"
b1000 ?
1(
#46
0(
#47
1(
#48
0(
#49
1(
#50
0(
#51
1(
#52
0(
#53
1(
#54
0(
#55
1(
#56
0(
#57
1(
#58
0(
#59
1(
#60
0(
#61
1(
#62
0(
#63
1(
#64
0(
b0 )
b0 3
1$
#65
1(
b1 )
b1 3
b1 /
b1 8
#66
0(
b10 )
b10 3
#67
1(
b11 )
b11 3
#68
0(
b100 )
b100 3
#69
1(
#70
0(
#71
1(
#72
0(
#73
1(
#74
0(
#75
1(
#76
0(
#77
1(
#78
0(
#79
1(
#80
0(
#81
1(
#82
0(
#83
1(
#84
0(
#85
1(
#86
0(
#87
1(
#88
0(
1#
#89
0!
1"
1(
#90
0(
#91
1(
#92
0(
#93
1(
#94
0(
#95
1(
#96
0(
#97
1(
#98
0(
0#
#99
1(
#100
0(
#101
1(
#102
0(
#103
1(
#104
0(
#105
1(
#106
0(
#107
1(
#108
0(
#109
1(
#110
0(
#111
1(
#112
0(
#113
1(
#114
0(
#115
1(
#116
0(
#117
1(
#118
0(
b1 )
b1 3
b0 /
b0 8
#119
1(
b10 )
b10 3
#120
0(
b11 )
b11 3
#121
1(
b100 )
b100 3
#122
0(
b101 )
b101 3
#123
1(
b110 )
b110 3
#124
0(
b111 )
b111 3
#125
1!
0"
b111 >
b1000 ?
1(
b1000 )
b1000 3
#126
0(
#127
1(
#128
0(
#129
1(
#130
0(
#131
1(
#132
0(
#133
1(
#134
0(
#135
1(
#136
0(
#137
1(
#138
0(
#139
1(
#140
0(
#141
1(
#142
0(
#143
1(
#144
0(
#145
1(
b1 )
b1 3
#146
0(
b10 )
b10 3
#147
1(
b11 )
b11 3
#148
0(
b100 )
b100 3
#149
1(
b101 )
b101 3
#150
0(
b110 )
b110 3
b1 ,
b1 5
#151
1(
b111 )
b111 3
#152
0(
b1000 )
b1000 3
#153
1(
#154
0(
#155
1(
#156
0(
#157
1(
#158
0(
#159
1(
#160
0(
#161
1(
#162
0(
#163
1(
#164
0(
#165
1(
#166
0(
#167
1(
#168
0(
#169
1(
#170
0(
#171
1(
#172
0(
#173
1(
#174
0(
#175
1(
#176
0(
#177
1(
#178
0(
#179
1(
#180
0(
#181
1(
#182
0(
#183
1(
#184
0(
#185
1(
#186
0(
#187
1(
#188
0(
#189
1(
#190
0(
#191
1(
#192
0(
